What happens when you initialize a repository? Why do you need to do it?

The .git hidden directory is added and thus the files are being tracked. Without it we can't
really do anything because Git does not know that we want to track the files.

How is the staging area different from the working directory and the repository? What value do you think it offers?

It different in the sense it "marks" the files that are about to be comitted and allow us more control over
what is going to be comitted since we don't necessarily want all the files in the working directory to be
comitted in each commit, but just the ones that represent a logical unit.

How can you use the staging area to make sure you have one commit per logical change?

Well, since we can decide what goes in the staging area and removing things from it and adding to it,
we can always make sure that all the files that are in the staging area represent a logical change, even
though some of them have been added at different times, and commit them only when we are satisfied that
this is the case

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

I guess the best situation for using branches is when we want to introduce some changes we are not sure are going to 
be part of the main project immediatly. (Like experimenting with a new feature). By usimg branches we can experiment 
as much we like to without fear of breaking the project.

How do the diagrams help you visualize the branch structure?

Well, it helps see where did things branched out and see the paths like in a tree graph sort