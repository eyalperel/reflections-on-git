When would you want to use a remote repository rather than keeping all your work local?

I think the number one reason is when you would like to share your code with other people, especailly for an open-source project where you
would like to have as many good contributors as you can and this seems a very clever way of opening the code base for different people to 
work on.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

For me, the main reason would be similar to the logic of having a staging area. This way, I have control over the changes I would like
to pull and work on. Also, it seems highly inefficient for a big project with hundreds of contributers to pull automatically each 
change that was made to the remote by every contributor. It gets out of hand rather quickly.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Branches are different paths in a given repository due to different needs, and the master branch is normally
the offical version. Clones are copies of a repository from github to local of from local to local at two different
locations on the local machine. forks are basically the same as clones, but they "live" on github, I fork a repository
on github to another repository, also on github, normally of a different user that would like to work on it (locally or not).

What is the benefit of having a copy of the last known state of the remote stored locally?

I think the main benefit would be working on the latest version offline (e.g. on a flight) and push it to the remote once an
internet connection is reestablished.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Well, I would need to store the code base (master) somewhere and manually review and update it as changes come along. I
really don't see how one collaborate more easily that way :-)